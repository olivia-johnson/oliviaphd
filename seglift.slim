initialize() {
	defineConstant("L", 1e6);
	initializeSLiMOptions(nucleotideBased=T); 		initializeAncestralNucleotides(randomNucleotides(L));
	initializeMutationTypeNuc("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0, mmJukesCantor(1e-7)); initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(1e-8);
}
1 { sim.addSubpop("p1", 2000); }

s1 fitness(NULL) { //summer
	nuc1 = genome1.nucleotides();
	nuc2 = genome2.nucleotides();
}
s2 fitness(NULL) { //winter
	nuc1 = genome1.nucleotides();
	nuc2 = genome2.nucleotides();
}

1:10000 late(){
	modValue = integerMod(sim.generation, 10);
	
	if (modValue >= 0 & modValue < 5) { //summer
		s1;
	}
	if (modValue >= 5) { //winter
		s2
			;	}

}



9999 late(){p1.genomes.outputMS(filePath = NULL);
	//p1.genomes.outputMS(filePath = "~/oliviaphd/data/seglift_output.txt")
}

10000 { sim.simulationFinished(); }
