
initialize() {
	defineConstant("L", 1000);
	defineConstant("y", 0.5 ); // exponent of fitness function
	initializeMutationRate(1e-6);
	initializeMutationType("m1", 0.5, "f", 0.0); // neutral
	initializeMutationType("m2", 0.5, "f", 0.3); // summer
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(1e-8);
}


1 { sim.addSubpop("p1", 100);}


1 late() {
	for (ind in 0:(p1.individualCount-1)) {
		gn1 = p1.individuals[ind].genome1;
		gn2 = p1.individuals[ind].genome2;
		for (pos in 0:(L-1)){
			all_count= rbinom(1, 2, 0.5);
			if (all_count == 2) {
				gn1.addNewDrawnMutation(m2, pos);
				gn2.addNewDrawnMutation(m2, pos);}
			if (all_count == 1) {
				gn1.addNewDrawnMutation(m2, pos); // is this introducing bias?
			}
		}
	}
}

s1 fitness(NULL) { //summer
	gnm1 = genome1.mutationsOfType(m2);
	gnm2 = genome2.mutationsOfType(m2);
	ns = sum(match(gnm1, gnm2)>=0); //homozygosity
	nhet = size(gnm1) + size(gnm2) - 2 * ns;  // heterozygosity
	zs = ns + (0.5 * nhet);
	
	return (1 + zs)^y;  
}
//s2 fitness(NULL) { //winter
//	gnm1 = genome1.nucleotides();
//	gnm2 = genome2.nucleotides();
//	nw = sum(match(gnm1, gnm2));
//	
//	return 1; // nw + (0.5 * nhet);;
//}



1:10000 late(){
	modValue = integerMod(sim.generation, 10);
	
	if (modValue >= 0 & modValue < 5) { //summer
		cat("Summer\n");
		//s1;
	}
	if (modValue >= 5) { //winter
		cat("Winter\n");
		//s2
		;	}

}


10000 { p1.genomes.outputMS(filePath = NULL);
	sim.simulationFinished(); }
