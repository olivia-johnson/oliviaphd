
initialize() {
	defineConstant("L", 1000); // segment length
	defineConstant("y", 0.5); // exponent of fitness function
	defineConstant("P", 200); // population size
	initializeMutationRate(1e-6);
	initializeMutationType("m1", 0.5, "f", 0.0); // neutral
	initializeMutationType("m2", 0.5, "f", 0.001); // summer
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L-1);
	initializeRecombinationRate(1e-8);
}


1 { sim.addSubpop("p1", P);}


2 late() {
	target = sample(p1.genomes, asInteger(P));
	for (pos in 0:(L-1)){
		target.addNewDrawnMutation(m2, pos);
	}
}

s1 fitness(NULL) { //summer
	gnm1 = genome1.mutationsOfType(m2);
	gnm2 = genome2.mutationsOfType(m2);
	ns = sum(match(gnm1, gnm2)>=0); //homozygosity
	nhet = size(gnm1) + size(gnm2) - 2 * ns;  // heterozygosity
	zs = ns + (0.5 * nhet);
	
	return (1 + zs)^y;
}

s2 fitness(NULL) { //winter
	gnm1 = genome1.mutationsOfType(m2);
	gnm2 = genome2.mutationsOfType(m2);
	ns = sum(match(gnm1, gnm2)>=0); //homozygosity
	nhet = size(gnm1) + size(gnm2) - 2 * ns;  // heterozygosity
	nw = L-(ns+nhet);
	zw = nw + (0.5 * nhet);
	
	return (1 + zw)^y;
}



1:10000 late(){
	modValue = integerMod(sim.generation, 10);
	
	if (modValue >= 0 & modValue < 5) { //summer
		cat("Summer\n");
		s1;
	}
	if (modValue >= 5) { //winter
		cat("Winter\n");
		s2
		;	}

}


10000 { p1.genomes.outputMS(filePath = NULL);
	sim.simulationFinished(); }
