{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red246\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c97255\c97647\c98039;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25340\viewh12900\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
MPI\
\
\
#!/bin/bash\
#SBATCH -p batch        # partition (this is the queue your job will be added to) \
#SBATCH -N 2            # number of nodes (here uses 2)\
#SBATCH -n 64           # number of cores (here 64 cores requested)\
#SBATCH --time=01:00:00 # time allocation, which has the format (D-HH:MM), here set to 1 hour\
#SBATCH --mem=32GB      # specify memory required per node (32GB per node = 64GB total)\
\
mpirun -np 64 ./my_program\
\
\
GPU\
\
#!/bin/bash\
\
# Configure the resources required\
#SBATCH -p batch                                                # partition (this is the queue your job will be added to)\
#SBATCH -n 1              	                                # number of tasks (sequential job starts 1 task) (check this if your job unexpectedly uses 2 nodes)\
#SBATCH -c 8              	                                # number of cores (sequential job calls a multi-thread program that uses 8 cores)\
#SBATCH --time=01:00:00                                         # time allocation, which has the format (D-HH:MM), here set to 1 hour\
#SBATCH --gres=gpu:4                                            # generic resource required (here requires 4 GPUs)\
#SBATCH --mem=16GB                                              # specify memory required per node (here set to 16 GB)\
\
# Configure notifications \
#SBATCH --mail-type=END                                         # Send a notification email when the job is done (=END)\
#SBATCH --mail-type=FAIL                                        # Send a notification email when the job fails (=FAIL)\
#SBATCH --mail-user=olivia.johnson@adelaide.edu.au          # Email to which notifications will be sent\
\
# Execute your script (due to sequential nature, please select proper compiler as your script corresponds to)\
bash ./my_program.sh                                            # bash script used here for demonstration purpose, you should select proper compiler for your needs \
\
\
\
module load Anaconda3/2020.07\
conda activate spyder-dev\
\
\
## need to call in parameters##\
\
srun python seglift_control.py ## if done this way will probably need to make control file for each sim type is there a better way? ##\
\
\
## move files from where written on scratch to directory ##\
\
conda deactivate\
\
\
}